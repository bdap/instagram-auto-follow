// CONFIGURABLE VARIABLES
const FOLLOW_BUTTON_TEXT = "Follow"; // change to localized language as displayed on Instagram
const MAX_ATTEMPTS_PER_FOLLOW = 3; // maximum number of attempts
const MAX_FOLLOW_ARRAY_SIZE = 500; // maximum number of follow buttons to click
const MIN_FOLLOW_TIME = 15; // minimum follow time in seconds
const MAX_FOLLOW_TIME = 100; // maximum follow time in seconds

// Follow a single user
const followUser = async (userButton) => {
  let attempts = 1;
  const username = userButton.dataset.username;
  console.log(`Trying to follow ${username}...`);
  while (attempts <= MAX_ATTEMPTS_PER_FOLLOW) {
    userButton.scrollIntoView(true);
    userButton.click();
    await new Promise((resolve) => setTimeout(resolve, 500));
    if (userButton.textContent !== FOLLOW_BUTTON_TEXT) {
      console.log(`Successfully followed ${username}!`);
      return true;
    }
    attempts++;
  }
  console.log(`Failed to follow ${username} after ${attempts - 1} attempts.`);
  return false;
};

// Follow a list of users
const followUsers = async (users) => {
  let followedCount = 0;
  for (const user of users) {
    const isFollowed = await followUser(user);
    if (isFollowed) {
      followedCount++;
    }
    const followTime = Math.floor(Math.random() * (MAX_FOLLOW_TIME - MIN_FOLLOW_TIME + 1) + MIN_FOLLOW_TIME);
    console.log(`Followed ${followedCount} out of ${users.length}.`);
    console.log(`Next follow in ${followTime} seconds.`);
    await new Promise((resolve) => setTimeout(resolve, followTime * 1000));
  }
  console.log("You cannot follow anymore.");
};

// Get an array of follow button elements
const followButtons = Array.from(document.querySelectorAll("button")).filter(
  (el) => el.textContent === FOLLOW_BUTTON_TEXT
);

if (followButtons.length > 0) {
  console.log(`Found ${followButtons.length} follow buttons.`);
  const usersToFollow = followButtons.slice(0, MAX_FOLLOW_ARRAY_SIZE);
  followUsers(usersToFollow);
} else {
  console.log("No follow buttons found.");
}
