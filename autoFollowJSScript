// Customize these variables to suit your needs
const MAX_FOLLOW_ARRAY_SIZE = 20; // Maximum number of follow buttons to click
const MIN_FOLLOW_TIME = 1; // Minimum time to wait between follows (in seconds)
const MAX_FOLLOW_TIME = 10; // Maximum time to wait between follows (in seconds)

// DO NOT MODIFY THESE VARIABLES
const FOLLOW_BUTTON_TEXT = "Follow";
const MAX_ATTEMPTS_PER_FOLLOW = 3;

const followSomebody = async (followButtons) => {
  while (followButtons && followButtons.length > 0) {
    let attempts = 1;
    const targetIndex = Math.floor(Math.random() * followButtons.length);
    const targetFollowButton = followButtons[targetIndex];
    console.log(`Trying to follow ${targetFollowButton.dataset.testid}...`);
    while (attempts <= MAX_ATTEMPTS_PER_FOLLOW) {
      targetFollowButton.scrollIntoView(true);
      targetFollowButton.click();
      await new Promise((resolve) => setTimeout(resolve, 500));
      if (targetFollowButton.textContent !== FOLLOW_BUTTON_TEXT) {
        console.log(`Successfully followed ${targetFollowButton.dataset.testid}!`);
        return true;
      }
      attempts++;
    }
    console.log(`Failed to follow ${targetFollowButton.dataset.testid} after ${attempts - 1} attempts.`);
    followButtons.splice(targetIndex, 1);
  }
  return false;
};

const timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms * 1000));

const randomTimeout = () => Math.floor(Math.random() * (MAX_FOLLOW_TIME - MIN_FOLLOW_TIME + 1) + MIN_FOLLOW_TIME);

const followEveryone = async () => {
  const followButtons = Array.from(document.querySelectorAll("button")).filter(
    (el) => el.textContent === `${FOLLOW_BUTTON_TEXT}`
  ).slice(0, MAX_FOLLOW_ARRAY_SIZE);
  console.log(`Found ${followButtons.length} follow buttons.`);
  let shouldStop = false;
  let followedCount = 0;
  while (!shouldStop) {
    const isFollowed = await followSomebody(followButtons);
    if (isFollowed) {
      followedCount++;
    }
    console.log(`Followed ${followedCount} out of ${followButtons.length}.`);
    shouldStop = followButtons.length === 0;
    if (!shouldStop) {
      const followTimeout = randomTimeout();
      console.log(`Next follow in ${followTimeout} seconds.`);
      await timeout(followTimeout);
    }
  }
  console.log("You cannot follow anymore.");
};

followEveryone();
